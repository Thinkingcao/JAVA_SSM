<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>SongSystem</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>classpath:applicationContext.xml</param-value>
  </context-param><!-- 加载指定的配置文件 -->
  <listener>
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  	<!-- ContextLoaderListener:在启动Web容器时，自动装配Spring applicationContext.xml的配置信息。 -->
  </listener>
  <listener>
  	<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  	<!-- 解决使用框架可能导致的内存泄漏问题 -->
  </listener>
  <servlet>
  	<servlet-name>springMVC</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<!-- springMVC框架中的前端控制器 -->
  	<init-param>
  		<param-name>contextConfigLocation</param-name>
  		<param-value>classpath:springMVC.xml</param-value>
  	</init-param>
	<load-on-startup>1</load-on-startup> 
	<!-- <load-on-startup>标记容器是否在启动的时候就加载这个servlet。
	当值>=0时，表示容器在应用启动时就加载这个servlet；
	当是<0时或者没有指定时，则指示容器在该servlet被选择时才加载。
	正数的值越小，启动该servlet的优先级越高。 --> 	
  </servlet>
  <!-- <init-param>标签和<context-param>标签作用一样都是存储一组键值对，去加载指定的配置文件，并将其存储在
  容器中以便之后的使用，<context-param>全局有效， <init-param>在指定的servlet中有效-->
  <servlet-mapping>
  	<servlet-name>springMVC</servlet-name>
  	<url-pattern>/</url-pattern>
  </servlet-mapping>
  <!-- <servlet>标签声明servlet， <servlet-mapping>映射servlet，即客户端要通过什么方式来访问这个servlet-->
  
  	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
			<init-param>
				<param-name>encoding</param-name>
				<param-value>UTF-8</param-value>
			</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> 
</web-app>








